{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ListItemFiltered.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpenses/ExpensesForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","for","name","value","yearSelected","onChange","event","onChangeYearFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ListItemFiltered","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","data","ExpensesChart","getMonth","max","Expense","console","log","useState","selectedFilterYear","setSelectedFilterYear","filteredExpenses","filter","toString","ExpensesForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpenses","expenseDataSaved","newExpenseData","random","onNewExpenseAdded","INITIAL_EXPENSES","App","setExpenses","newExpenseAdded","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d845fbe2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \" card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const changeSelectYearHandler = (event) => {\r\n        props.onChangeYearFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">    \r\n                <label for=\"select-year\">Select year:</label>\r\n                <select name=\"select-year\" value={props.yearSelected} onChange={changeSelectYearHandler}>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2022\">2022</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpensesFilter;","import React from \"react\";\r\nimport \"./ExpenseDate.css\"\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { month: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  \r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">$ {props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ListItemFiltered.css\";\r\n\r\nconst ListItemFiltered = (props) => {\r\n\r\n  if (props.expenses.length === 0) {\r\n    return ( \r\n      <h2 className=\"expenses-list__fallback\"> No expenses found for this selected Year </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.expenses.map( (expense) => (\r\n        <ExpenseItem\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          key={expense.id}\r\n        ></ExpenseItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ListItemFiltered;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = \"0%\";\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div \r\n                    className=\"chart-bar__fill\" \r\n                    style={{height: barFillHeight}}>\r\n                </div>\r\n            </div>  \r\n            <div className=\"chart-bar__label\">{props.label}</div>      \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport \"./Chart.css\"\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPoints = props.dataPoints;\r\n    return(\r\n        <div className=\"chart\">\r\n            {dataPoints.map(data => \r\n                <ChartBar\r\n                    key={data.label}\r\n                    value={data.value}\r\n                    maxValue={props.maxValue}\r\n                    label={data.label}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    const dataPoints = [\r\n        {label: \"Jan\", value: 0 },\r\n        {label: \"Feb\", value: 0 },\r\n        {label: \"Mar\", value: 0 },\r\n        {label: \"Apr\", value: 0 },\r\n        {label: \"May\", value: 0 },\r\n        {label: \"Jun\", value: 0 },\r\n        {label: \"Jul\", value: 0 },\r\n        {label: \"Aug\", value: 0 },\r\n        {label: \"Sep\", value: 0 },\r\n        {label: \"Oct\", value: 0 },\r\n        {label: \"Nov\", value: 0 },\r\n        {label: \"Dec\", value: 0 } \r\n    ];\r\n    \r\n    for (const expense of props.expenses){\r\n        const monthOfExpenses = expense.date.getMonth();\r\n        dataPoints[monthOfExpenses].value += expense.amount;\r\n    }    \r\n    \r\n    const maxValue = Math.max(...dataPoints.map(data => data.value));\r\n\r\n    return(<Chart dataPoints={dataPoints} maxValue={maxValue}/>);\r\n}\r\n\r\nexport default ExpensesChart;\r\n","import React, {useState} from \"react\";\r\nimport \"./Expense.css\";\r\n//import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ListItemFiltered from \"./ListItemFiltered\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expense = (props) => {\r\n \r\n  const expenses = props.data;\r\n\r\n  console.log(expenses);\r\n\r\n  const [selectedFilterYear, setSelectedFilterYear] = useState(\"2021\");\r\n\r\n  const changeYearFilterHandler = (year) => {\r\n\r\n    setSelectedFilterYear(year);\r\n\r\n  }\r\n\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === selectedFilterYear;\r\n  });\r\n\r\n  return (<Card className=\"expenses\">\r\n\r\n    <ExpensesFilter onChangeYearFilter={changeYearFilterHandler} yearSelected={selectedFilterYear}/>\r\n    <ExpensesChart expenses={filteredExpenses} />\r\n    <ListItemFiltered expenses={filteredExpenses} />\r\n  </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n","import React, {useState} from \"react\";\r\nimport \"./ExpensesForm.css\";\r\n\r\n\r\n\r\nconst ExpensesForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n    const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        //console.log(event.target.value);\r\n    \r\n    }\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        //console.log(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        //console.log(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        //console.log(expenseData);\r\n        setEnteredTitle(\"\");\r\n        setEnteredAmount(\"\");\r\n        setEnteredDate(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label> \r\n                    <input \r\n                        type=\"text\" \r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                     />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label> \r\n                    <input \r\n                        type=\"number\" \r\n                        min=\"0.01\" step=\"0.01\" \r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                     />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label> \r\n                    <input \r\n                        type=\"date\" \r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                     />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add new expense</button>\r\n            </div>\r\n        </form>            \r\n        \r\n    );\r\n}\r\n\r\nexport default ExpensesForm;\r\n","import React from \"react\";\r\nimport \"./NewExpenses.css\"\r\nimport ExpensesForm from \"./ExpensesForm\"\r\n\r\nconst NewExpenses = (props) => {\r\n\r\n    const saveExpenseDataHandler = ( expenseDataSaved ) => {\r\n\r\n        const newExpenseData = {\r\n            ...expenseDataSaved,\r\n            id : Math.random().toString()\r\n        }\r\n\r\n        props.onNewExpenseAdded(newExpenseData);\r\n        //console.log(\"estamos en NewExpenses\");\r\n        //console.log(newExpenseData);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n            <ExpensesForm onSaveExpenseData={saveExpenseDataHandler} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpenses;","import React, {useState} from \"react\";\nimport Expense from \"./components/Expenses/Expense\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\n\nconst INITIAL_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e412\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e3242\",\n    title: \"Car Insurance\",\n    amount: 132.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e124\",\n    title: \"New Desk (Wooden)\",\n    amount: 12313,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  \n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n\n  const newExpenseAddedHandler = (newExpenseAdded) => {\n\n    setExpenses( (prevExpenses) => {\n      return (\n        [newExpenseAdded, ...prevExpenses]\n      );\n    });\n\n  }\n\n  return (\n    <div>\n      <h1> Expenses Controller </h1>\n      <NewExpenses onNewExpenseAdded={newExpenseAddedHandler}/>\n      <Expense data={expenses}></Expense>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}